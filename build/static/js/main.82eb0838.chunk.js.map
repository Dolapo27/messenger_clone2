{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","alt","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAuBeA,G,MAnBAC,sBAAY,WAAsBC,GAAQ,IAA5BC,EAA2B,EAA3BA,QACnBC,EAD8C,EAAlBC,WACPF,EAAQE,SACnC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAYF,EAAS,oBAAqB,qBAAhD,SACA,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACCC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHX,WAIGR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,KAAqDF,EAAQA,qB,QCDhEU,EAZIC,IAASC,cAAc,CAClCC,OAAQ,0CACRC,WAAY,wCACZC,UAAW,wBACXC,cAAe,oCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIAC,Y,yCC4DRC,MA9Df,WAAgB,IAAD,EACaC,mBAAU,IADvB,mBACNC,EADM,KACCC,EADD,OAEkBF,mBAAS,IAF3B,mBAEPG,EAFO,KAEGC,EAFH,OAGkBJ,mBAAS,IAH3B,mBAGPpB,EAHO,KAGGyB,EAHH,KA+Bb,OA1BDC,qBAAU,WACPlB,EAAGmB,WAAW,YACbC,QAAQ,YAAY,QACpBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAI,CAACC,GAAGD,EAAIC,GAAIpC,QAAQmC,EAAIE,iBAEhE,IAEDT,qBAAU,WAERD,EAAYW,OAAO,iCAClB,IAgBD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAK,GAAGC,IAAK,6GAClB,gEACA,0CAAatC,KAEb,sBAAMC,UAAW,WAAjB,SACE,eAACsC,EAAA,EAAD,CAAatC,UAAU,kBAAvB,UACE,cAACuC,EAAA,EAAD,CAAOvC,UAAU,YAAYwC,YAAY,sBAAsBC,MAASrB,EAAOsB,SAAY,SAAAC,GAAK,OAAItB,EAASsB,EAAMC,OAAOH,UAC1H,cAACI,EAAA,EAAD,CAAY7C,UAAU,iBAAiB8C,UAAW1B,EAAOf,QAAS,YAAYD,MAAQ,UAAU2C,KAAO,SAASC,QAtBpG,SAACL,GACjBA,EAAMM,iBAEN1C,EAAGmB,WAAW,YAAYwB,IAAI,CAC5BrD,QAAQuB,EACRrB,SAASA,EACToD,UAAU3C,IAASS,UAAUmC,WAAWC,oBAG1ChC,EAAS,KAaL,SACE,cAAC,IAAD,WAKR,cAAC,IAAD,UAEIC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIpC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAkBE,SAAWA,EAAUF,QAAWA,GAApCoC,YC/CTqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.82eb0838.chunk.js","sourcesContent":["import React,{forwardRef} from 'react';\r\nimport { Card, CardContent, Typography} from '@material-ui/core';\r\nimport './Message.css';\r\n\r\nconst Message =forwardRef( ({message, username}, ref)=> {\r\n    const isUser= username === message.username;\r\n    return (\r\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\r\n            <Card className= {isUser ? \"message__userCard\": \"message__guestCard\"}>\r\n            <CardContent>\r\n                <Typography \r\n                 color=\"white\"\r\n                 variant=\"h5\"\r\n                 component=\"h2\">\r\n                 {!isUser && `${message.username || 'Unknown User'}:`}{message.message}\r\n                </Typography>\r\n            </CardContent>\r\n            </Card>\r\n        </div>\r\n            \r\n    )\r\n})\r\n\r\nexport default Message\r\n\r\n","import firebase from \"firebase\";\r\nconst firebaseApp =firebase.initializeApp({\r\n        apiKey: \"AIzaSyDX3T3-rxHNu-bBPFf-1njPvIDxdqkH3FU\",\r\n        authDomain: \"messenger-clone-1e102.firebaseapp.com\",\r\n        projectId: \"messenger-clone-1e102\",\r\n        storageBucket: \"messenger-clone-1e102.appspot.com\",\r\n        messagingSenderId: \"113882726088\",\r\n        appId: \"1:113882726088:web:66e56ba9f0550256152ffd\",\r\n        measurementId: \"G-RBQ18DVDVM\"\r\n\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nexport default db ;","import React, { useState, useEffect } from 'react';\nimport { FormControl,  Input } from '@material-ui/core';\nimport Message from'./Message.js';\nimport db from './firebase.js';\nimport firebase from 'firebase';\nimport Flipmove from 'react-flip-move'\nimport './App.css';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n  const [input, setInput] = useState ('');\n  const[messages, setMessages] = useState([]);\n  const[username, setUsername] = useState('');\n\n useEffect(() =>{\n    db.collection('messages')\n    .orderBy('timestamp','desc')\n    .onSnapshot(snapshot =>{\n      setMessages(snapshot.docs.map(doc =>({id:doc.id, message:doc.data()})))\n    })\n },[])\n\n  useEffect(() => {\n    //run code on a condition in REACT\n    setUsername(prompt('Please enter your username'))\n  }, [] )\n\n  const sendMessage = (event) => {\n      event.preventDefault();\n\n      db.collection('messages').add({\n        message:input,\n        username:username,\n        timestamp:firebase.firestore.FieldValue.serverTimestamp()\n        \n      }) \n      setInput('');\n      \n  } \n\n  return (\n    <div className=\"App\">\n      <img alt= '' src ='https://facebookbrand.com/wp-content/uploads/2020/10/Logo_Messenger_NewBlurple-399x399-1.png?w=399&h=399'/>\n      <h1>Hello Programmers ðŸ‘Œ</h1>\n      <h2>Welcome {username}</h2>\n\n      <form className= 'app_form'>\n        <FormControl className='app_formControl'>\n          <Input className='app_Input' placeholder='Enter a message ...' value = {input} onChange = {event => setInput(event.target.value)}/>\n          <IconButton className='app_IconButton' disabled={!input} variant ='contained' color = 'primary' type = 'submit' onClick = {sendMessage}>\n            <SendIcon/>\n          </IconButton>\n        </FormControl> \n      </form>\n      \n    <Flipmove>\n      {\n        messages.map(({id, message}) => (\n          <Message key={id} username= {username} message = {message}/>\n        ))\n      }\n    </Flipmove>\n    \n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}